<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Vocanic myBlogger</title>
    <link>https://zc6666.top/post/</link>
    <description>Recent content in Posts on Vocanic myBlogger</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© 2011-2020 Fabian Tamp</copyright>
    <lastBuildDate>Sat, 02 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://zc6666.top/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>数据绪论笔记</title>
      <link>https://zc6666.top/post/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%BB%AA%E8%AE%BA%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Sat, 02 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://zc6666.top/post/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%BB%AA%E8%AE%BA%E7%AC%94%E8%AE%B0/</guid>
      <description>数据绪论笔记 一、基本概念：
 1.数据： 描述事务的符号记录。可用文字、图形等多种形式表示，经数字化处理后可存入计算机。
2.数据库(DB): 按一定的数据模型组织、描述和存储在计算机内的、有组织的、可共享的数据集合。
3.数据库管理系统(DBMS): 位于用户和操作系统之间的一层数据管理软件。主要功能包括：
 数据定义功能：DBMS提供DDL,用户通过它定义数据对象。
数据操作功能：DBMS提供DML，用户通过它实现对数据库的查询、插入、删除和修改等操作。
数据库的运行管理：DBMS对数据库的建立、运用和维护进行统一管理、统一控制，以保证数据的安全性、完整性、并发控制及故障恢复。
数据库的建立和维护功能：数据库初始数据的输入、转换，数据库的转储、恢复、重新组织及性能监视与分析等。
   4.数据库系统(DBS)：计算机中引入数据库后的系统，包括
数据库DB
数据库管理系统DBMS
应用系统
数据库管理员DBA和用户
 二、DBMS的工作过程：
 1.应用层：
 应用层是DBMS与终端用户和应用程序的界面层，处理的对象是各种各样的数据库应用。
   2.语言翻译处理层:
 语言翻译处理层是对数据库语言的各类语句进行语法分析，视图转换、授权检查、完整性检查等。
   3.数据存储层：
 数据存储层处理的对象是单个元组，它将上层的集合操作转换为单记录操作。
   4.数据存储层：
 数据存储层处理的对象是数据页和系统缓存区。
   5.操作系统：
 操作系统是DBMS的基础。操作系统提供的存取原语和基本的存取方法通常是作为DBMS存储层的接口。
  </description>
    </item>
    
    <item>
      <title>9.22数据库课程设计</title>
      <link>https://zc6666.top/post/9.22%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1/</link>
      <pubDate>Wed, 22 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://zc6666.top/post/9.22%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1/</guid>
      <description>#9.22数据库课程设计
一.课程要求
  概念结构设计和逻辑结构设计 SQL语言编程实现数据库建立应用和维护   二. 设计要求
  数据库课题选择 (不少于十个表)
2. 分析需求（系统调查，体验流程） 绘制 DFD DD图表及文字来说明   系统功能
数据字典
数据流程图
 需要存储什么数据，冗余的数据 是否需要存储
对数据进行 分类
    模型设计（难度适中,量化标准）功能数据分析 实现模型(的某一模块) 创建数据库脚本并提出文档 使用 POWERDESIGNER 和 DBMS   三.分数标准
  1/4学时按旷课处理 8能抄袭 文档中标明分工部分 完成情况   四.注意点
  着重于 分析 而不是实现 确定问题域(数据包含范围) 拎清楚数据的关系和必要性，删繁就简——不需要的数据不进行管理 需求分析，设计，管理逻辑分析，整个完整流程 交四个报告 和图和代码一起压缩打包   </description>
    </item>
    
    <item>
      <title>MIT算法导论合集</title>
      <link>https://zc6666.top/post/mit%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E5%90%88%E9%9B%86/</link>
      <pubDate>Sat, 21 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://zc6666.top/post/mit%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E5%90%88%E9%9B%86/</guid>
      <description> B站也有视频，也可以去我的b站账号看同款视频：
https://www.bilibili.com/video/BV1vL411J7Za
视频就放在下面了，需要的可以自己看:
01:
 02:
 03:
 04:
 05:
 06:
 07:
 08:
 09:
 10:
 11:
 12:
 13:
 14:
 15:
 16:
 17:
 18:
 19:
 20:
 21:
 22:
 23:
 24:
 </description>
    </item>
    
    <item>
      <title>使用jQuery的animate()制作自定义动画</title>
      <link>https://zc6666.top/post/jquery-%E7%9A%84animate%E5%8A%A9%E4%BD%A0%E5%81%9A%E5%87%BA%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8A%A8%E7%94%BB/</link>
      <pubDate>Thu, 15 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://zc6666.top/post/jquery-%E7%9A%84animate%E5%8A%A9%E4%BD%A0%E5%81%9A%E5%87%BA%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8A%A8%E7%94%BB/</guid>
      <description>function clickEffect() {let balls = [];let longPressed = false;let longPress;let multiplier = 0;let width, height;let origin;let normal;let ctx;const colours = [&#34;#F73859&#34;, &#34;#14FFEC&#34;, &#34;#00E0FF&#34;, &#34;#FF99FE&#34;, &#34;#FAF15D&#34;];const canvas = document.createElement(&#34;canvas&#34;);document.body.appendChild(canvas);canvas.setAttribute(&#34;style&#34;, &#34;width: 100%; height: 100%; top: 0; left: 0; z-index: 99999; position: fixed; pointer-events: none;&#34;);const pointer = document.createElement(&#34;span&#34;);pointer.classList.add(&#34;pointer&#34;);document.body.appendChild(pointer);if (canvas.getContext &amp;&amp; window.addEventListener) {ctx = canvas.getContext(&#34;2d&#34;);updateSize();window.addEventListener(&#39;resize&#39;, updateSize, false);loop();window.</description>
    </item>
    
    <item>
      <title>实现用wordcloud&#43;jieba&#43;python制作中文词汇云图</title>
      <link>https://zc6666.top/post/jieba-wordcloud-python%E5%AE%9E%E7%8E%B0%E4%B8%AD%E6%96%87%E8%AF%8D%E4%BA%91%E7%BB%98%E5%88%B6/</link>
      <pubDate>Wed, 14 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://zc6666.top/post/jieba-wordcloud-python%E5%AE%9E%E7%8E%B0%E4%B8%AD%E6%96%87%E8%AF%8D%E4%BA%91%E7%BB%98%E5%88%B6/</guid>
      <description>function clickEffect() {let balls = [];let longPressed = false;let longPress;let multiplier = 0;let width, height;let origin;let normal;let ctx;const colours = [&#34;#F73859&#34;, &#34;#14FFEC&#34;, &#34;#00E0FF&#34;, &#34;#FF99FE&#34;, &#34;#FAF15D&#34;];const canvas = document.createElement(&#34;canvas&#34;);document.body.appendChild(canvas);canvas.setAttribute(&#34;style&#34;, &#34;width: 100%; height: 100%; top: 0; left: 0; z-index: 99999; position: fixed; pointer-events: none;&#34;);const pointer = document.createElement(&#34;span&#34;);pointer.classList.add(&#34;pointer&#34;);document.body.appendChild(pointer);if (canvas.getContext &amp;&amp; window.addEventListener) {ctx = canvas.getContext(&#34;2d&#34;);updateSize();window.addEventListener(&#39;resize&#39;, updateSize, false);loop();window.</description>
    </item>
    
    <item>
      <title>如何用Turtle库画出一坨粑粑</title>
      <link>https://zc6666.top/post/%E7%94%A8turtle-%E5%BA%93%E4%BC%98%E9%9B%85%E5%9C%B0%E7%94%BB%E5%87%BA%E4%B8%80%E5%9D%A8%E7%B2%91%E7%B2%91/</link>
      <pubDate>Tue, 13 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://zc6666.top/post/%E7%94%A8turtle-%E5%BA%93%E4%BC%98%E9%9B%85%E5%9C%B0%E7%94%BB%E5%87%BA%E4%B8%80%E5%9D%A8%E7%B2%91%E7%B2%91/</guid>
      <description>function clickEffect() {let balls = [];let longPressed = false;let longPress;let multiplier = 0;let width, height;let origin;let normal;let ctx;const colours = [&#34;#F73859&#34;, &#34;#14FFEC&#34;, &#34;#00E0FF&#34;, &#34;#FF99FE&#34;, &#34;#FAF15D&#34;];const canvas = document.createElement(&#34;canvas&#34;);document.body.appendChild(canvas);canvas.setAttribute(&#34;style&#34;, &#34;width: 100%; height: 100%; top: 0; left: 0; z-index: 99999; position: fixed; pointer-events: none;&#34;);const pointer = document.createElement(&#34;span&#34;);pointer.classList.add(&#34;pointer&#34;);document.body.appendChild(pointer);if (canvas.getContext &amp;&amp; window.addEventListener) {ctx = canvas.getContext(&#34;2d&#34;);updateSize();window.addEventListener(&#39;resize&#39;, updateSize, false);loop();window.</description>
    </item>
    
    <item>
      <title>Git 的命令行常见使用总结</title>
      <link>https://zc6666.top/post/git%E7%9A%84%E5%B8%B8%E7%94%A8%E6%80%BB%E7%BB%93/</link>
      <pubDate>Mon, 12 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://zc6666.top/post/git%E7%9A%84%E5%B8%B8%E7%94%A8%E6%80%BB%E7%BB%93/</guid>
      <description>function clickEffect() {let balls = [];let longPressed = false;let longPress;let multiplier = 0;let width, height;let origin;let normal;let ctx;const colours = [&#34;#F73859&#34;, &#34;#14FFEC&#34;, &#34;#00E0FF&#34;, &#34;#FF99FE&#34;, &#34;#FAF15D&#34;];const canvas = document.createElement(&#34;canvas&#34;);document.body.appendChild(canvas);canvas.setAttribute(&#34;style&#34;, &#34;width: 100%; height: 100%; top: 0; left: 0; z-index: 99999; position: fixed; pointer-events: none;&#34;);const pointer = document.createElement(&#34;span&#34;);pointer.classList.add(&#34;pointer&#34;);document.body.appendChild(pointer);if (canvas.getContext &amp;&amp; window.addEventListener) {ctx = canvas.getContext(&#34;2d&#34;);updateSize();window.addEventListener(&#39;resize&#39;, updateSize, false);loop();window.</description>
    </item>
    
    <item>
      <title>正则表达式的总结</title>
      <link>https://zc6666.top/post/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E6%80%BB%E7%BB%93/</link>
      <pubDate>Wed, 07 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://zc6666.top/post/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E6%80%BB%E7%BB%93/</guid>
      <description>function clickEffect() {let balls = [];let longPressed = false;let longPress;let multiplier = 0;let width, height;let origin;let normal;let ctx;const colours = [&#34;#F73859&#34;, &#34;#14FFEC&#34;, &#34;#00E0FF&#34;, &#34;#FF99FE&#34;, &#34;#FAF15D&#34;];const canvas = document.createElement(&#34;canvas&#34;);document.body.appendChild(canvas);canvas.setAttribute(&#34;style&#34;, &#34;width: 100%; height: 100%; top: 0; left: 0; z-index: 99999; position: fixed; pointer-events: none;&#34;);const pointer = document.createElement(&#34;span&#34;);pointer.classList.add(&#34;pointer&#34;);document.body.appendChild(pointer);if (canvas.getContext &amp;&amp; window.addEventListener) {ctx = canvas.getContext(&#34;2d&#34;);updateSize();window.addEventListener(&#39;resize&#39;, updateSize, false);loop();window.</description>
    </item>
    
    <item>
      <title>My Personal Introduction</title>
      <link>https://zc6666.top/post/introduction/</link>
      <pubDate>Sun, 04 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://zc6666.top/post/introduction/</guid>
      <description>火山 vocanic   studys in the Computer School of HDU,
  is one of the REDHOME members and also the Deputy director of the Office in HDU sports club.
  loves singing and watching movies, is optimistic, outgoing and always ready to make new friends.
  ###welcome to be my parter to make progress in life and study!
 My Github Link
  QQ NUMBER: 2546319206</description>
    </item>
    
    <item>
      <title>为什么想到要建一个博客</title>
      <link>https://zc6666.top/post/reflectionreason/</link>
      <pubDate>Sun, 04 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://zc6666.top/post/reflectionreason/</guid>
      <description>function clickEffect() {let balls = [];let longPressed = false;let longPress;let multiplier = 0;let width, height;let origin;let normal;let ctx;const colours = [&#34;#F73859&#34;, &#34;#14FFEC&#34;, &#34;#00E0FF&#34;, &#34;#FF99FE&#34;, &#34;#FAF15D&#34;];const canvas = document.createElement(&#34;canvas&#34;);document.body.appendChild(canvas);canvas.setAttribute(&#34;style&#34;, &#34;width: 100%; height: 100%; top: 0; left: 0; z-index: 99999; position: fixed; pointer-events: none;&#34;);const pointer = document.createElement(&#34;span&#34;);pointer.classList.add(&#34;pointer&#34;);document.body.appendChild(pointer);if (canvas.getContext &amp;&amp; window.addEventListener) {ctx = canvas.getContext(&#34;2d&#34;);updateSize();window.addEventListener(&#39;resize&#39;, updateSize, false);loop();window.</description>
    </item>
    
  </channel>
</rss>
