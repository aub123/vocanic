<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>机器学习 on Vocanic myBlogger</title>
    <link>https://zc6666.top/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/</link>
    <description>Recent content in 机器学习 on Vocanic myBlogger</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© 2011-2020 Fabian Tamp</copyright>
    <lastBuildDate>Wed, 13 Jul 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://zc6666.top/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>机器学习概述——机器学习是什么</title>
      <link>https://zc6666.top/post/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%A6%82%E8%BF%B0/</link>
      <pubDate>Wed, 13 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://zc6666.top/post/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%A6%82%E8%BF%B0/</guid>
      <description>机器学习是什么 [TOC]
1.1 人工智能概述 人工智能起源  ​ 图灵测试 ​ 达特茅斯会议  人工智能的发展经历的3个阶段  ​ 1980年是正式成型期，尚不具备影响力 ​ 1990-2010年代是蓬勃发展期，诞生了众多的理论和算法，真正走向了实用 ​ 2012年之后是深度学习期，深度学习技术诞生并急速发展，较好的解决了现阶段AI的一些重点问题，并带来了产业界的快速发展  1.2 人工智能主要分支 人工智能、机器学习和深度学习 人工智能和机器学习，深度学习的关系: 机器学习是人工智能的一个实现途径 深度学习是机器学习的一个方法(神经网络)发展而来​​
主要分支介绍： 通讯、感知与行动是现代人工智能的三个关键能力，在这里我们将根据这些能力/应用对这三个技术领域进行介绍：计算机视觉(CV)、自然语言处理(NLP)和机器人。在NLP领域中，将覆盖文本挖掘/分类、机器翻译和语音识别。
  分支一：计算机视觉 计算机视觉(CV)是指机器感知环境的能力。这一技术类别中的经典任务有图像形成，图像处理，图像提取，和图像的三维推理。物体检测和人脸识别是其比较成功的研究领域。
  分支二: 语音识别 语音识别是指识别语音(说出的语音)并将其转换成对应文本的技术。相反的任务(文本转语音/TTS)也是这一领域内一个类似的研究主题。
  分支三：文本挖掘/分类 这里的文本挖掘主要是指文本分类，该技术可用于理解、组织和分类结构化或非结构化文本文档。其涵盖的主要任务有句法分析、情绪分析和垃圾信息检测。
  分支四：机器翻译 机器翻译(MT)是利用机器的力量自动将一种自然语音(源语音)的文本翻译成另一种语音(目标语音)。机器翻译方法通常可分为三大类：基于规则的机器翻译(RBMT)、统计机器翻译(SMT)和神经机器翻译(NMT)。
  分支五: 机器人 机器人学(Robotics)研究的是机器人的设计、制造、运行和应用，以及控制它们的计算机系统、传感反馈和信息处理
机器人可以分为两大类：固定机器人和移动机器人。固定机器人通常被用于工业生产(比如用于装配线)。常见的移动机器人应用有货运机器人、空中机器人和自动载具。机器人需要不同部件和系统的协作才能实现最优的作业。其中在硬件上包含传感器、反应器和控制器；另外还有能够实现感知能力的软件，比如定位、地图测绘和目标识别。
  人工智能发展必备三要素 数据、算法、计算力
逐层、分布、并行算法能力提升
GPU、FPGA、TPU能力大幅度提升
扩展: GPU与CPU对比:
 CPU – IO密集型 GPU – 计算密集型  Q:什么类型的程序适合在GPU上运行
A:计算密集型的程序。所谓计算密集型的程序，就是其大部分运行时间花在了寄存器上运算的，寄存器的速度和处理器的速度相当，从寄存器读写数据几乎没有延时，可以做一下对比，读内存的延迟大概是几百个时钟周期，读硬盘速度就不说了，即便是SSD，也实在是太慢了 易于并行的程序。GPU其实是做一种SIMD架构，他有成百上千个核，每一个核在同一时间最好能做同样的事情。</description>
    </item>
    
  </channel>
</rss>
